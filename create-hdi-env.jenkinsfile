//Jenkins pipeline to provision HDInsight infrastructure
def azureSubscription = ""
def inputSubscription = ""
def skipRemainingStages = "true"

pipeline {
    agent any
    //  why does subscription have more functionalities then accounted for to run playbooks?
    parameters{
        choice(name: 'subscription', choices: 'Project Azure governance testing\nNon-Prod Data and Processing\nProject CPD', description: 'Subscription to provision')
        choice(name: 'data_domain', choices: 'Please select\ndp\nautomation\naccess\nmonitoring', description: 'Data Domain')
        choice(name: 'resource_group_phase', choices: 'Please select\npiimanagement\ncuration\ndatalake\nintegration\ningestion\nshared', description: 'Resourcegroup Phase')
        string(name: 'project_name', defaultValue:'', description: 'Specify project name')
        string(name: 'cluster_name', defaultValue:'', description: 'Specify cluster name')
        string(name: 'short_cluster_name', defaultValue:'', description: 'Specify short cluster name for Managed Identity')
        choice(name: 'application_name', choices: 'Please select\nsecupi\nhdp\ndatagateway', description: 'Application name')
        choice(name: 'env_type', choices: 'Please select\ndev\nsit\nuat\nprd', description: 'Environment type to provision')
        string(name: 'project_description', defaultValue:'', description: 'Specify project description')
        choice(name: 'country', choices: 'Please select\nnl\nch\nie\nde\nat', description: 'Select Country')
        choice(name: 'unit', choices: 'Please select\nconsumeranalytics\ndatacentertechnology\ndatasolutions\nitsecurity\nsupplychain', description: 'Select Unit')
        booleanParam(defaultValue: false, name: 'oozie_db', description: 'Provision an Oozie database')
        booleanParam(defaultValue: false, name: 'hive_db', description: 'Provision a Hive database')
        booleanParam(defaultValue: false, name: 'ranger_db', description: 'Provision a Ranger database')
    }

    stages {

        stage('set subscription id') {
            steps {
                script {
                    // Missing credential_ID's in Jenkins
                    if ( "${params.subscription}".equals('Project Azure governance testing' ))
                    {env.CREDENTIAL_ID = 'SPAzureGovernanceTesting'}
                    if ( "${params.subscription}".equals('Non-Prod Data and Processing'))
                    {env.CREDENTIAL_ID = 'SPNonProdDataAndProcessing'}
                    if ( "${params.subscription}".equals('Prod Data and Processing'))
                    {env.CREDENTIAL_ID = 'SPProdDataAndProcessing'}
                    else {env.CREDENTIAL_ID = 'SPCpd'}

                }
            }
        }

        stage ('print CredentialID'){
            steps {sh 'printenv'}
        }

    /*    stage ('Git checkout and switch to Master') {
            steps {
                sh 'git checkout --track origin/mkok'
            }
        }
        stage ('Create HDI environment configuration') {
            steps {
                withCredentials([azureServicePrincipal(credentialsId: '1683b46e-b612-4f6d-a717-9baed4b0dffb',
                        subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                        clientIdVariable: 'AZURE_CLIENT_ID',
                        clientSecretVariable: 'AZURE_SECRET',
                        tenantIdVariable: 'AZURE_TENANT')]) {
                    ansiblePlaybook playbook: 'playbooks/create-new-environment.yml', skippedTags: 'dataproject'
                }
            }
        }
     */
        stage ('Provision HDI Infrastructure for Project Azure Governance Testing') {

            steps {

                withCredentials([azureServicePrincipal(credentialsId: "${env.CREDENTIAL_ID}" ,
                        subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                        clientIdVariable: 'AZURE_CLIENT_ID',
                        clientSecretVariable: 'AZURE_SECRET',
                        tenantIdVariable: 'AZURE_TENANT')]) {
                    ansiblePlaybook extras: "-e @environments/'${params.data_domain}'-'${params.resource_group_phase}'-'${params.project_name}'-'${params.application_name}'-'${params.env_type}'/all", playbook: 'playbooks/provision-virtual-environment.yml', skippedTags: 'dataproject'
                }
            }
        }

    }
}
