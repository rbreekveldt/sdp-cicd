  //Jenkins pipeline to provision HDInsight infrastructure
    def azureSubscription = ""
    def inputSubscription = ""
    def skipRemainingStages = "true"

    pipeline {
    agent any
    parameters{
    choice(name: 'Subscription', choices: '', description: 'Subscription to provision')
    choice(name: 'ResourceGroup', choices: 'dp-datalake-vmie-dev', description: 'Subscription to provision')
    choice(name: 'data_domain', choices: 'dp', description: 'Data Domain')
    choice(name: 'resource_group_phase', choices: 'datalake', description: 'Resourcegroup Phase')
    choice(name: 'project_name', choices: 'vmie', description: 'Project Name')
    choice(name: 'env_type', choices: 'dev', description: 'Environment type to provision')
        string(name: 'oozie_db_installed', defaultValue: 'The oozie_db is already installed' )
            string(name: 'hive_db_installed', defaultValue: 'The hive_db is already installed' )
            booleanParam(defaultValue: false, name: 'ranger_db', description: 'Provision a Ranger database')
        }

    stages {
    stage ('Git checkout and switch to Master') {
    steps {
    sh 'git checkout --track origin/mike'
    }
    }

    stage ('Provision HDI Infrastructure') {
    steps {

    withCredentials([azureServicePrincipal(credentialsId: 'SPIEDigitalRoadmap' ,
                                                            subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                                                            clientIdVariable: 'AZURE_CLIENT_ID',
                                                            clientSecretVariable: 'AZURE_SECRET',
                                                            tenantIdVariable: 'AZURE_TENANT')]) {
                                                            ansiblePlaybook extras: "-e @environments/dp-datalake-vmie-dev/all",  playbook: 'playbooks/create-new-environment.yml', skippedTags: 'dataproject,maintain'
  }
  }
  }

    stage ('Provision HDI Infrastructure') {
    steps {

  withCredentials([azureServicePrincipal(credentialsId: 'SPIEDigitalRoadmap' ,
                                                          subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                                                          clientIdVariable: 'AZURE_CLIENT_ID',
                                                          clientSecretVariable: 'AZURE_SECRET',
                                                          tenantIdVariable: 'AZURE_TENANT')]) {
                                                          ansiblePlaybook extras: "-e @environments/dp-datalake-vmie-dev/all", playbook: 'playbooks/provision-virtual-environment.yml', skippedTags: 'dataproject'
  }
  }
  }

  }
  }
