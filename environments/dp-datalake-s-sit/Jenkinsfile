//Jenkins pipeline for the infrastructure of environment
def azureSubscription = ""
def inputSubscription = ""
def skipRemainingStages = "true"
 
//data_domain=monitoring resource_group_phase=uat project_name=secuPI application_name=badapp env_type=nifi sdp_admin_public=~/.ssh/sdp_pub project_description='Bad project'
 
pipeline {
    agent any
    parameters{
            //text(name: 'Subscription', [], description: 'Subscription to provision')
            choice(name: 'Subscription', choices: '', description: 'Subscription to provision')
            choice(name: 'ResourceGroup', choices: 'dp-datalake-s-hdp-sit', description: 'Subscription to provision')
            choice(name: 'data_domain', choices: 'dp', description: 'Data Domain')
            choice(name: 'resource_group_phase', choices: 'datalake', description: 'Resourcegroup Phase')
            choice(name: 'project_name', choices: 's', description: 'Project Name')
            //string(name: 'project_name', defaultValue:'', description: 'Specify project name')
            choice(name: 'application_name', choices: 'hdp', description: 'Application name')
            choice(name: 'env_type', choices: 'sit', description: 'Environment type to provision')
            string(name: 'nifi_nodes_count', defaultValue: '', description: 'Update the node count')
            //string(name: 'project_description', defaultValue:'', description: 'Specify project description')
            //booleanParam(defaultValue: false, name: 'nifi', description: ' ')
            //booleanParam(defaultValue: false, name: 'kafka', description: ' ')
            choice(name: 'Cloud', choices: 'azure', description: 'Cloud to provision')
 
            /* booleanParam(defaultValue: false, name: 'Provision_Cloud_Infra', description: '         Deploy Infrastructure on Cloud')
            booleanParam(defaultValue: false, name: 'Provision_Cluster', description: '         Install Cluster')
                string(name: 'Nodes_count', defaultValue: '3', description: 'Specify the count for nifi worker nodes')
                string(name: 'tags', defaultValue: '', description: 'Limit provisioning to these tags') */
       }
    stages {
        stage ('Git checkout and switch to Master') {
            steps {
                sh 'git checkout --track origin/master'
            }
        }
       stage ('(Re) Provision Dataproject') {
            steps {
            withCredentials([azureServicePrincipal(credentialsId: '1683b46e-b612-4f6d-a717-9baed4b0dffb',
                                                  subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                                                  clientIdVariable: 'AZURE_CLIENT_ID',
                                                  clientSecretVariable: 'AZURE_SECRET',
                                                  tenantIdVariable: 'AZURE_TENANT')]) {
                 ansiblePlaybook extras: "-e @environments/'${params.data_domain}'-'${params.resource_group_phase}'-'${params.project_name}'-'${params.application_name}'-'${params.env_type}'/all", playbook: 'playbooks/provision-virtual-environment.yml'
                 }
            }
        }
    }
}
