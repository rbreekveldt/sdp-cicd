- name: Create new environment
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    rg_name_test: "{{ lookup('env', 'master_project_name') }}-rg"
    internal_vnet_test: "vnet-sdp-internal-to-oreo-dev-vnet"
    #"vnet-sdp-internal-to-vnet-{{ lookup('env', 'project_name') }}-{{ lookup('env', 'env_type') }}"
    external_vnet_test: "vnet-sdp-external-to-vnet-{{ lookup('env', 'project_name') }}-{{ lookup('env', 'env_type') }}"
    cicd_vnet_test: "vnet-cicd-prd-to-vnet-{{ lookup('env', 'project_name') }}-{{ lookup('env', 'env_type') }}"
    dom_serv_vnet: "Liberty-Global-AD-domain-services-to-vnet-{{ lookup('env', 'project_name') }}-{{ lookup('env', 'env_type') }}"

  pre-tasks:

    - debug:
        msg: "{{ rg_name_test }}"


    - name: Get list of VNET LIBERTY GLOBAL AD DOMAIN peerings
      azure_rm_virtualnetworkpeering_facts:
        resource_group: access-sdp-jumpbox-rg
        virtual_network: vnet-sdp-internal
        subscription_id: dd10eed9-865c-4bfa-a260-d3e8fe16b047
        tenant: "{{ lookup('env', 'AZURE_TENANT') }}"
        secret: "{{ lookup('env', 'AZURE_SECRET') }}"
        client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
      register: vnet_internal

    - debug:
        msg: "{{ vnet_internal.vnetpeerings }}"

    - fail:
        msg: The vnet already exists!
      when: item.name == internal_vnet_test
      loop: "{{ vnet_internal.vnetpeerings }}"

    - name: Get list of VNET LIBERTY GLOBAL AD DOMAIN peerings
      azure_rm_virtualnetworkpeering_facts:
        resource_group: access-sdp-jumpbox-rg
        virtual_network: vnet-sdp-external
        subscription_id: dd10eed9-865c-4bfa-a260-d3e8fe16b047
        tenant: "{{ lookup('env', 'AZURE_TENANT') }}"
        secret: "{{ lookup('env', 'AZURE_SECRET') }}"
        client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
      register: vnet_external

    - name: Get list of VNET LIBERTY GLOBAL AD DOMAIN peerings
      azure_rm_virtualnetworkpeering_facts:
        resource_group: automation-cicd-prd-rg
        virtual_network: vnet_cicd_prd
        subscription_id: fd478270-bd64-4cf3-bb8b-53016bb2ffd6
        tenant: "{{ lookup('env', 'AZURE_TENANT') }}"
        secret: "{{ lookup('env', 'AZURE_SECRET') }}"
        client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
      register: vnet_prd

    - name: Get list of VNET LIBERTY GLOBAL AD DOMAIN peerings
      azure_rm_virtualnetworkpeering_facts:
        resource_group: Liberty-Global-Shared-Resources
        virtual_network: Liberty-Global-AD-domain-services
        subscription_id: dd10eed9-865c-4bfa-a260-d3e8fe16b047
        tenant: "{{ lookup('env', 'AZURE_TENANT') }}"
        secret: "{{ lookup('env', 'AZURE_SECRET') }}"
        client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
      register: vnet_glb

    - fail:
        msg: The resource_group is not according to the namespace conventions ( 24 > 3 characters)
      when: rg_name_test | length > 24

    - name: Get facts for all resource groups
      azure_rm_resourcegroup_facts:
      register: azure_resource_groups

    - debug:
        msg: "{{ azure_resource_groups.resourcegroups }}"

    - fail:
        msg: The resource_group already exists!
      when:  item.name == rg_name_test
      loop: "{{ azure_resource_groups.resourcegroups }}"



