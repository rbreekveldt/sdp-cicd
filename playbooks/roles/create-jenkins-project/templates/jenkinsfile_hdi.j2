  //Jenkins pipeline to provision HDInsight infrastructure
    def azureSubscription = ""
    def inputSubscription = ""
    def skipRemainingStages = "true"

    pipeline {
    agent any
    parameters{
  {% if lookup('env', 'oozie_db') == 'false' %}
  booleanParam(defaultValue: false, name: 'oozie_db', description: 'Provision an Oozie database')
  {% else %}
  string(name: 'oozie_db_installed', defaultValue: 'The oozie_db is already installed' )
  {% endif %}
  {% if lookup('env', 'hive_db') == 'false' %}
  booleanParam(defaultValue: false, name: 'hive_db', description: 'Provision a Hive database')
  {% else %}
  string(name: 'hive_db_installed', defaultValue: 'The hive_db is already installed' )
  {% endif %}
  {% if lookup('env', 'ranger_db') == 'false' %}
  booleanParam(defaultValue: false, name: 'ranger_db', description: 'Provision a Ranger database')
  {% else %}
  string(name: 'ranger_db_installed', defaultValue: 'The oozie_db is already installed' )
  {% endif %}
  }



    stages {
    stage ('Git checkout and switch to Master') {
    steps {
    sh 'git checkout --track origin/mike'
    }
    }

    stage ('Create HDI environment configuration') {
    steps {
  withCredentials([azureServicePrincipal(credentialsId: {{ lookup('env', 'CREDENTIAL_ID') }} ,
                                                          subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                                                          clientIdVariable: 'AZURE_CLIENT_ID',
                                                          clientSecretVariable: 'AZURE_SECRET',
                                                          tenantIdVariable: 'AZURE_TENANT')]) {
                                                          ansiblePlaybook playbook: 'playbooks/create-new-environment.yml', skippedTags: 'dataproject'
  }
  }
  }

    stage ('Provision HDI Infrastructure') {
    steps {

  withCredentials([azureServicePrincipal(credentialsId: "${env.CREDENTIAL_ID}" ,
                                                          subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                                                          clientIdVariable: 'AZURE_CLIENT_ID',
                                                          clientSecretVariable: 'AZURE_SECRET',
                                                          tenantIdVariable: 'AZURE_TENANT')]) {
                                                          ansiblePlaybook extras: "-e @environments/{{ master_project_name }}/all", playbook: 'playbooks/provision-virtual-environment.yml', skippedTags: 'dataproject,hdi'
  }
  }
  }

  }
  }
